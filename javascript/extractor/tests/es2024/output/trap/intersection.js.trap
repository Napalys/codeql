#10000=@"/intersection.js;sourcefile"
files(#10000,"/intersection.js")
#10001=@"/;folder"
folders(#10001,"/")
containerparent(#10001,#10000)
#10002=@"loc,{#10000},0,0,0,0"
locations_default(#10002,#10000,0,0,0,0)
hasLocation(#10000,#10002)
#20000=@"global_scope"
scopes(#20000,0)
#20001=@"script;{#10000},1,1"
#20002=*
comments(#20002,0,#20001," Valid use of intersection operator, matches b or c","// Vali ...  b or c")
#20003=@"loc,{#10000},1,20,1,72"
locations_default(#20003,#10000,1,20,1,72)
hasLocation(#20002,#20003)
#20004=*
comments(#20004,0,#20001,"Valid regex, but no intersection operation: Matches the literal string ""abc&&bcd""","//Valid ... c&&bcd""")
#20005=@"loc,{#10000},2,14,2,96"
locations_default(#20005,#10000,2,14,2,96)
hasLocation(#20004,#20005)
#20006=*
comments(#20006,0,#20001," Valid regex, but incorrect intersection operation: ","// Vali ... ation: ")
#20007=@"loc,{#10000},3,18,3,71"
locations_default(#20007,#10000,3,18,3,71)
hasLocation(#20006,#20007)
#20008=*
comments(#20008,0,#20001," - Matches a single character from [abc]","// - Ma ... m [abc]")
#20009=@"loc,{#10000},4,18,4,59"
locations_default(#20009,#10000,4,18,4,59)
hasLocation(#20008,#20009)
#20010=*
comments(#20010,0,#20001," - Then the literal ""&&""","// - Th ... al ""&&""")
#20011=@"loc,{#10000},5,18,5,43"
locations_default(#20011,#10000,5,18,5,43)
hasLocation(#20010,#20011)
#20012=*
comments(#20012,0,#20001," - Then a single character from [bcd]","// - Th ... m [bcd]")
#20013=@"loc,{#10000},6,18,6,56"
locations_default(#20013,#10000,6,18,6,56)
hasLocation(#20012,#20013)
#20014=*
comments(#20014,0,#20001," Compilation error due to invalid use of intersection operation","// Comp ... eration")
#20015=@"loc,{#10000},7,16,7,80"
locations_default(#20015,#10000,7,16,7,80)
hasLocation(#20014,#20015)
#20016=*
lines(#20016,#20001,"/[[abc]&&[bcd]]/v; // Valid use of intersection operator, matches b or c","
")
#20017=@"loc,{#10000},1,1,1,72"
locations_default(#20017,#10000,1,1,1,72)
hasLocation(#20016,#20017)
#20018=*
lines(#20018,#20001,"/abc&&bcd/v; //Valid regex, but no intersection operation: Matches the literal string ""abc&&bcd""","
")
#20019=@"loc,{#10000},2,1,2,96"
locations_default(#20019,#10000,2,1,2,96)
hasLocation(#20018,#20019)
#20020=*
lines(#20020,#20001,"/[abc]&&[bcd]/v; // Valid regex, but incorrect intersection operation: ","
")
#20021=@"loc,{#10000},3,1,3,71"
locations_default(#20021,#10000,3,1,3,71)
hasLocation(#20020,#20021)
#20022=*
lines(#20022,#20001,"                 // - Matches a single character from [abc]","
")
#20023=@"loc,{#10000},4,1,4,59"
locations_default(#20023,#10000,4,1,4,59)
hasLocation(#20022,#20023)
indentation(#10000,4," ",17)
#20024=*
lines(#20024,#20001,"                 // - Then the literal ""&&""","
")
#20025=@"loc,{#10000},5,1,5,43"
locations_default(#20025,#10000,5,1,5,43)
hasLocation(#20024,#20025)
indentation(#10000,5," ",17)
#20026=*
lines(#20026,#20001,"                 // - Then a single character from [bcd]","
")
#20027=@"loc,{#10000},6,1,6,56"
locations_default(#20027,#10000,6,1,6,56)
hasLocation(#20026,#20027)
indentation(#10000,6," ",17)
#20028=*
lines(#20028,#20001,"/[abc&&bcd]/v; // Compilation error due to invalid use of intersection operation","
")
#20029=@"loc,{#10000},7,1,7,80"
locations_default(#20029,#10000,7,1,7,80)
hasLocation(#20028,#20029)
numlines(#20001,7,4,7)
#20030=*
tokeninfo(#20030,5,#20001,0,"/[[abc]&&[bcd]]/v")
#20031=@"loc,{#10000},1,1,1,17"
locations_default(#20031,#10000,1,1,1,17)
hasLocation(#20030,#20031)
#20032=*
tokeninfo(#20032,8,#20001,1,";")
#20033=@"loc,{#10000},1,18,1,18"
locations_default(#20033,#10000,1,18,1,18)
hasLocation(#20032,#20033)
#20034=*
tokeninfo(#20034,5,#20001,2,"/abc&&bcd/v")
#20035=@"loc,{#10000},2,1,2,11"
locations_default(#20035,#10000,2,1,2,11)
hasLocation(#20034,#20035)
next_token(#20002,#20034)
#20036=*
tokeninfo(#20036,8,#20001,3,";")
#20037=@"loc,{#10000},2,12,2,12"
locations_default(#20037,#10000,2,12,2,12)
hasLocation(#20036,#20037)
#20038=*
tokeninfo(#20038,5,#20001,4,"/[abc]&&[bcd]/v")
#20039=@"loc,{#10000},3,1,3,15"
locations_default(#20039,#10000,3,1,3,15)
hasLocation(#20038,#20039)
next_token(#20004,#20038)
#20040=*
tokeninfo(#20040,8,#20001,5,";")
#20041=@"loc,{#10000},3,16,3,16"
locations_default(#20041,#10000,3,16,3,16)
hasLocation(#20040,#20041)
#20042=*
tokeninfo(#20042,5,#20001,6,"/[abc&&bcd]/v")
#20043=@"loc,{#10000},7,1,7,13"
locations_default(#20043,#10000,7,1,7,13)
hasLocation(#20042,#20043)
next_token(#20006,#20042)
next_token(#20008,#20042)
next_token(#20010,#20042)
next_token(#20012,#20042)
#20044=*
tokeninfo(#20044,8,#20001,7,";")
#20045=@"loc,{#10000},7,14,7,14"
locations_default(#20045,#10000,7,14,7,14)
hasLocation(#20044,#20045)
#20046=*
tokeninfo(#20046,0,#20001,8,"")
#20047=@"loc,{#10000},8,1,8,0"
locations_default(#20047,#10000,8,1,8,0)
hasLocation(#20046,#20047)
next_token(#20014,#20046)
toplevels(#20001,0)
#20048=@"loc,{#10000},1,1,8,0"
locations_default(#20048,#10000,1,1,8,0)
hasLocation(#20001,#20048)
#20049=*
stmts(#20049,2,#20001,0,"/[[abc]&&[bcd]]/v;")
#20050=@"loc,{#10000},1,1,1,18"
locations_default(#20050,#10000,1,1,1,18)
hasLocation(#20049,#20050)
stmt_containers(#20049,#20001)
#20051=*
exprs(#20051,5,#20049,0,"/[[abc]&&[bcd]]/v")
hasLocation(#20051,#20031)
enclosing_stmt(#20051,#20049)
expr_containers(#20051,#20001)
literals("/[[abc]&&[bcd]]/v","/[[abc]&&[bcd]]/v",#20051)
#20052=*
regexpterm(#20052,1,#20051,0,"[[abc]&&[bcd]]")
#20053=@"loc,{#10000},1,2,1,15"
locations_default(#20053,#10000,1,2,1,15)
hasLocation(#20052,#20053)
#20054=*
regexpterm(#20054,23,#20052,0,"[[abc]")
#20055=@"loc,{#10000},1,2,1,7"
locations_default(#20055,#10000,1,2,1,7)
hasLocation(#20054,#20055)
#20056=*
regexpterm(#20056,14,#20054,0,"[")
#20057=@"loc,{#10000},1,3,1,3"
locations_default(#20057,#10000,1,3,1,3)
hasLocation(#20056,#20057)
regexp_const_value(#20056,"[")
#20058=*
regexpterm(#20058,14,#20054,1,"a")
#20059=@"loc,{#10000},1,4,1,4"
locations_default(#20059,#10000,1,4,1,4)
hasLocation(#20058,#20059)
regexp_const_value(#20058,"a")
#20060=*
regexpterm(#20060,14,#20054,2,"b")
#20061=@"loc,{#10000},1,5,1,5"
locations_default(#20061,#10000,1,5,1,5)
hasLocation(#20060,#20061)
regexp_const_value(#20060,"b")
#20062=*
regexpterm(#20062,14,#20054,3,"c")
#20063=@"loc,{#10000},1,6,1,6"
locations_default(#20063,#10000,1,6,1,6)
hasLocation(#20062,#20063)
regexp_const_value(#20062,"c")
#20064=*
regexpterm(#20064,14,#20052,1,"&&")
#20065=@"loc,{#10000},1,8,1,9"
locations_default(#20065,#10000,1,8,1,9)
hasLocation(#20064,#20065)
regexp_const_value(#20064,"&&")
#20066=*
regexpterm(#20066,23,#20052,2,"[bcd]")
#20067=@"loc,{#10000},1,10,1,14"
locations_default(#20067,#10000,1,10,1,14)
hasLocation(#20066,#20067)
#20068=*
regexpterm(#20068,14,#20066,0,"b")
#20069=@"loc,{#10000},1,11,1,11"
locations_default(#20069,#10000,1,11,1,11)
hasLocation(#20068,#20069)
regexp_const_value(#20068,"b")
#20070=*
regexpterm(#20070,14,#20066,1,"c")
#20071=@"loc,{#10000},1,12,1,12"
locations_default(#20071,#10000,1,12,1,12)
hasLocation(#20070,#20071)
regexp_const_value(#20070,"c")
#20072=*
regexpterm(#20072,14,#20066,2,"d")
#20073=@"loc,{#10000},1,13,1,13"
locations_default(#20073,#10000,1,13,1,13)
hasLocation(#20072,#20073)
regexp_const_value(#20072,"d")
#20074=*
regexpterm(#20074,14,#20052,3,"]")
#20075=@"loc,{#10000},1,15,1,15"
locations_default(#20075,#10000,1,15,1,15)
hasLocation(#20074,#20075)
regexp_const_value(#20074,"]")
#20076=*
regexp_parse_errors(#20076,#20052,"unexpected character")
hasLocation(#20076,#20075)
#20077=*
stmts(#20077,2,#20001,1,"/abc&&bcd/v;")
#20078=@"loc,{#10000},2,1,2,12"
locations_default(#20078,#10000,2,1,2,12)
hasLocation(#20077,#20078)
stmt_containers(#20077,#20001)
#20079=*
exprs(#20079,5,#20077,0,"/abc&&bcd/v")
hasLocation(#20079,#20035)
enclosing_stmt(#20079,#20077)
expr_containers(#20079,#20001)
literals("/abc&&bcd/v","/abc&&bcd/v",#20079)
#20080=*
regexpterm(#20080,14,#20079,0,"abc&&bcd")
#20081=@"loc,{#10000},2,2,2,9"
locations_default(#20081,#10000,2,2,2,9)
hasLocation(#20080,#20081)
regexp_const_value(#20080,"abc&&bcd")
#20082=*
stmts(#20082,2,#20001,2,"/[abc]&&[bcd]/v;")
#20083=@"loc,{#10000},3,1,3,16"
locations_default(#20083,#10000,3,1,3,16)
hasLocation(#20082,#20083)
stmt_containers(#20082,#20001)
#20084=*
exprs(#20084,5,#20082,0,"/[abc]&&[bcd]/v")
hasLocation(#20084,#20039)
enclosing_stmt(#20084,#20082)
expr_containers(#20084,#20001)
literals("/[abc]&&[bcd]/v","/[abc]&&[bcd]/v",#20084)
#20085=*
regexpterm(#20085,1,#20084,0,"[abc]&&[bcd]")
#20086=@"loc,{#10000},3,2,3,13"
locations_default(#20086,#10000,3,2,3,13)
hasLocation(#20085,#20086)
#20087=*
regexpterm(#20087,23,#20085,0,"[abc]")
#20088=@"loc,{#10000},3,2,3,6"
locations_default(#20088,#10000,3,2,3,6)
hasLocation(#20087,#20088)
#20089=*
regexpterm(#20089,14,#20087,0,"a")
#20090=@"loc,{#10000},3,3,3,3"
locations_default(#20090,#10000,3,3,3,3)
hasLocation(#20089,#20090)
regexp_const_value(#20089,"a")
#20091=*
regexpterm(#20091,14,#20087,1,"b")
#20092=@"loc,{#10000},3,4,3,4"
locations_default(#20092,#10000,3,4,3,4)
hasLocation(#20091,#20092)
regexp_const_value(#20091,"b")
#20093=*
regexpterm(#20093,14,#20087,2,"c")
#20094=@"loc,{#10000},3,5,3,5"
locations_default(#20094,#10000,3,5,3,5)
hasLocation(#20093,#20094)
regexp_const_value(#20093,"c")
#20095=*
regexpterm(#20095,14,#20085,1,"&&")
#20096=@"loc,{#10000},3,7,3,8"
locations_default(#20096,#10000,3,7,3,8)
hasLocation(#20095,#20096)
regexp_const_value(#20095,"&&")
#20097=*
regexpterm(#20097,23,#20085,2,"[bcd]")
#20098=@"loc,{#10000},3,9,3,13"
locations_default(#20098,#10000,3,9,3,13)
hasLocation(#20097,#20098)
#20099=*
regexpterm(#20099,14,#20097,0,"b")
#20100=@"loc,{#10000},3,10,3,10"
locations_default(#20100,#10000,3,10,3,10)
hasLocation(#20099,#20100)
regexp_const_value(#20099,"b")
#20101=*
regexpterm(#20101,14,#20097,1,"c")
#20102=@"loc,{#10000},3,11,3,11"
locations_default(#20102,#10000,3,11,3,11)
hasLocation(#20101,#20102)
regexp_const_value(#20101,"c")
#20103=*
regexpterm(#20103,14,#20097,2,"d")
#20104=@"loc,{#10000},3,12,3,12"
locations_default(#20104,#10000,3,12,3,12)
hasLocation(#20103,#20104)
regexp_const_value(#20103,"d")
#20105=*
stmts(#20105,2,#20001,3,"/[abc&&bcd]/v;")
#20106=@"loc,{#10000},7,1,7,14"
locations_default(#20106,#10000,7,1,7,14)
hasLocation(#20105,#20106)
stmt_containers(#20105,#20001)
#20107=*
exprs(#20107,5,#20105,0,"/[abc&&bcd]/v")
hasLocation(#20107,#20043)
enclosing_stmt(#20107,#20105)
expr_containers(#20107,#20001)
literals("/[abc&&bcd]/v","/[abc&&bcd]/v",#20107)
#20108=*
regexpterm(#20108,23,#20107,0,"[abc&&bcd]")
#20109=@"loc,{#10000},7,2,7,11"
locations_default(#20109,#10000,7,2,7,11)
hasLocation(#20108,#20109)
#20110=*
regexpterm(#20110,14,#20108,0,"a")
#20111=@"loc,{#10000},7,3,7,3"
locations_default(#20111,#10000,7,3,7,3)
hasLocation(#20110,#20111)
regexp_const_value(#20110,"a")
#20112=*
regexpterm(#20112,14,#20108,1,"b")
#20113=@"loc,{#10000},7,4,7,4"
locations_default(#20113,#10000,7,4,7,4)
hasLocation(#20112,#20113)
regexp_const_value(#20112,"b")
#20114=*
regexpterm(#20114,14,#20108,2,"c")
#20115=@"loc,{#10000},7,5,7,5"
locations_default(#20115,#10000,7,5,7,5)
hasLocation(#20114,#20115)
regexp_const_value(#20114,"c")
#20116=*
regexpterm(#20116,14,#20108,3,"&")
#20117=@"loc,{#10000},7,6,7,6"
locations_default(#20117,#10000,7,6,7,6)
hasLocation(#20116,#20117)
regexp_const_value(#20116,"&")
#20118=*
regexpterm(#20118,14,#20108,4,"&")
#20119=@"loc,{#10000},7,7,7,7"
locations_default(#20119,#10000,7,7,7,7)
hasLocation(#20118,#20119)
regexp_const_value(#20118,"&")
#20120=*
regexpterm(#20120,14,#20108,5,"b")
#20121=@"loc,{#10000},7,8,7,8"
locations_default(#20121,#10000,7,8,7,8)
hasLocation(#20120,#20121)
regexp_const_value(#20120,"b")
#20122=*
regexpterm(#20122,14,#20108,6,"c")
#20123=@"loc,{#10000},7,9,7,9"
locations_default(#20123,#10000,7,9,7,9)
hasLocation(#20122,#20123)
regexp_const_value(#20122,"c")
#20124=*
regexpterm(#20124,14,#20108,7,"d")
#20125=@"loc,{#10000},7,10,7,10"
locations_default(#20125,#10000,7,10,7,10)
hasLocation(#20124,#20125)
regexp_const_value(#20124,"d")
#20126=*
entry_cfg_node(#20126,#20001)
#20127=@"loc,{#10000},1,1,1,0"
locations_default(#20127,#10000,1,1,1,0)
hasLocation(#20126,#20127)
#20128=*
exit_cfg_node(#20128,#20001)
hasLocation(#20128,#20047)
successor(#20105,#20107)
successor(#20107,#20128)
successor(#20082,#20084)
successor(#20084,#20105)
successor(#20077,#20079)
successor(#20079,#20082)
successor(#20049,#20051)
successor(#20051,#20077)
successor(#20126,#20049)
numlines(#10000,7,4,7)
filetype(#10000,"javascript")
